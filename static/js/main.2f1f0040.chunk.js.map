{"version":3,"sources":["components/Error.js","components/Pregunta.js","components/Formulario.js","components/Gasto.js","components/Listado.js","helpers.js","components/ControlPresupuesto.js","App.js","serviceWorker.js","index.js"],"names":["Error","mensaje","className","Pregunta","guardarPresupuesto","guardarRestante","actualizarPregunta","useState","cantidad","guardarCantidad","error","guardarError","onSubmit","e","preventDefault","isNaN","type","placeholder","onChange","parseInt","target","value","Formulario","guardarGasto","guardarCrearGasto","nombre","guardarNombre","trim","gasto","id","shortid","generate","Gasto","Listado","gastos","map","key","revisarPresupuesto","presupuesto","restante","ControlPresupuesto","App","mostrarpregunta","guardarGastos","creargasto","useEffect","presupuestoRestante","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2f1f0040.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Error = ({mensaje}) =>  ( \n    <p className=\"alert alert-danger error\"> {mensaje} </p>\n );\n\nError.propTypes = {\n    mensaje: PropTypes.string.isRequired\n}\n\n \nexport default Error;","import React, { Fragment, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Error from './Error';\n\nconst Pregunta = ({ guardarPresupuesto, guardarRestante, actualizarPregunta }) => {\n\n    // definir el state\n    const [ cantidad, guardarCantidad ] = useState(0);\n    const [ error, guardarError] = useState(false);\n\n    // Función que lee el presupuesto\n    const definirPresupuesto = e => {\n        guardarCantidad( parseInt(e.target.value, 10) )\n    }\n\n    // Submit para definir el presupuesto\n    const agregarPresupuesto = e => {\n        e.preventDefault();\n\n        // Validar\n        if(cantidad < 1 || isNaN( cantidad ) ) {\n            guardarError(true);\n            return;\n        }\n\n        // si se pasa la validación\n        guardarError(false);\n        guardarPresupuesto(cantidad);\n        guardarRestante(cantidad);\n        actualizarPregunta(false);\n    }\n\n    return ( \n        <Fragment>\n            <h2>Coloca tu presupuesto</h2>\n\n            { error ? <Error mensaje=\"El Presupuesto es Incorrecto\" />  : null }\n\n            <form\n                onSubmit={agregarPresupuesto}\n            >\n                <input\n                    type=\"number\"\n                    className=\"u-full-width\"\n                    placeholder=\"Coloca tu presupuesto\"\n                    onChange={definirPresupuesto}\n                />\n\n                <input \n                    type=\"submit\"\n                    className=\"button-primary u-full-width\"\n                    value=\"Definir Presupuesto\"\n                />\n            </form>\n        </Fragment>\n\n     );\n}\n\nPregunta.propTypes = {\n    guardarPresupuesto: PropTypes.func.isRequired,\n    guardarRestante: PropTypes.func.isRequired,\n    actualizarPregunta: PropTypes.func.isRequired\n}\n \nexport default Pregunta;","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport shortid from 'shortid';\nimport Error from './Error';\n\nconst Formulario = ({guardarGasto, guardarCrearGasto}) => {\n\n    const [nombre, guardarNombre] = useState('');\n    const [cantidad, guardarCantidad] = useState(0);\n    const [ error, guardarError] = useState(false);\n\n    \n    // cuando el usuario agrega un gasto\n    const agregarGasto = e => {\n        e.preventDefault();\n\n        // validar\n        if(cantidad < 1 || isNaN( cantidad) || nombre.trim() === '') {\n            guardarError(true);\n            return;\n        }\n        guardarError(false);\n\n        // construir el gasto\n        const gasto = {\n            nombre, \n            cantidad, \n            id: shortid.generate()\n        }\n\n        // pasar el gasto al componente principal\n        guardarGasto(gasto);\n        guardarCrearGasto(true);\n\n        // resetear el form\n        guardarNombre('');\n        guardarCantidad(0);\n    }\n\n    return ( \n        <form\n            onSubmit={agregarGasto}\n        >\n            <h2>Agrega tus gastos aquí</h2>\n\n            { error ? <Error mensaje=\"Ambos campos son obligatorios o Presupuesto Incorrecto\" /> : null }\n\n\n            <div className=\"campo\">\n                <label>Nombre Gasto</label>\n                <input \n                    type=\"text\"\n                    className=\"u-full-width\"\n                    placeholder=\"Ej. Transporte\"\n                    value={nombre}\n                    onChange={e => guardarNombre(e.target.value)}\n                />\n            </div>\n\n            <div className=\"campo\">\n                <label>Cantidad Gasto</label>\n                <input \n                    type=\"number\"\n                    className=\"u-full-width\"\n                    placeholder=\"Ej. 300\"\n                    value={cantidad}\n                    onChange={e => guardarCantidad( parseInt( e.target.value, 10 ) )}\n                />\n            </div>\n\n            <input\n                type=\"submit\"\n                className=\"button-primary u-full-width\"\n                value=\"Agregar Gasto\"\n            />\n\n        </form>\n\n     );\n}\n\nFormulario.propTypes = {\n    guardarGasto: PropTypes.func.isRequired,\n    guardarCrearGasto: PropTypes.func.isRequired\n}\n \nexport default Formulario;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Gasto = ({gasto}) => ( \n    <li className=\"gastos\">\n        <p>\n            {gasto.nombre}\n\n            <span className=\"gasto\">$ {gasto.cantidad} </span>\n        </p>\n    </li>\n);\n\nGasto.propTypes = {\n    gasto: PropTypes.object.isRequired\n}\n \nexport default Gasto;","import React from 'react';\nimport Gasto from './Gasto';\nimport PropTypes from 'prop-types';\n\nconst Listado = ({gastos}) => ( \n    <div className=\"gastos-realizados\">\n        <h2>Listado</h2>\n        {gastos.map(gasto => (\n            <Gasto \n                key={gasto.id}\n                gasto={gasto}\n            />\n        ))}\n    </div>\n);\n\nListado.propTypes = {\n    gastos: PropTypes.array.isRequired\n}\n \nexport default Listado;","export const revisarPresupuesto = (presupuesto, restante) => {\n    let clase;\n\n    if( ( presupuesto / 4 ) > restante ) {\n        clase = 'alert alert-danger';\n    } else if ( (presupuesto / 2) > restante ) {\n        clase = 'alert alert-warning';\n    } else {\n        clase = 'alert alert-success';\n    }\n\n    return clase;\n}","import React, { Fragment} from 'react';\nimport PropTypes from 'prop-types';\nimport { revisarPresupuesto } from '../helpers';\n\nconst ControlPresupuesto = ({presupuesto, restante}) => {\n    return ( \n        <Fragment>\n            <div className=\"alert alert-primary\">\n                Presupuesto: $ {presupuesto}\n            </div>\n            <div className={revisarPresupuesto(presupuesto, restante)}>\n                Restante: $ {restante}\n            </div>\n        </Fragment>\n\n     );\n}\n\nControlPresupuesto.propTypes = {\n    presupuesto: PropTypes.number.isRequired,\n    restante: PropTypes.number.isRequired\n}\n \nexport default ControlPresupuesto;","import React, { useState, useEffect } from 'react';\nimport Pregunta from './components/Pregunta';\nimport Formulario from './components/Formulario';\nimport Listado from './components/Listado';\nimport ControlPresupuesto from './components/ControlPresupuesto';\n\nfunction App() {\n\n  // definir el state\n  const [ presupuesto, guardarPresupuesto] = useState(0);\n  const [ restante, guardarRestante] = useState(0);\n  const [ mostrarpregunta, actualizarPregunta ] = useState(true);\n  const [ gastos, guardarGastos] = useState([]);\n  const [ gasto, guardarGasto ] = useState({});\n  const [ creargasto, guardarCrearGasto ] = useState(false);\n\n  // UseEffect que actualiza el restante\n\n  useEffect(() => {\n      if(creargasto) {\n\n          // agrega el nuevo presupuesto\n          guardarGastos([\n            ...gastos,\n            gasto\n          ]);\n\n          // resta del presupuesto actual\n          const presupuestoRestante = restante - gasto.cantidad;\n          guardarRestante(presupuestoRestante);\n\n          // Resetear a false\n          guardarCrearGasto(false);\n      }\n  }, [gasto, creargasto, gastos, restante]);\n\n\n  return (\n    <div className=\"container\">\n        <header>\n            <h1>Gasto Semanal</h1>\n\n            <div className=\"contenido-principal contenido\">\n              { mostrarpregunta ?  \n                ( \n                  <Pregunta \n                    guardarPresupuesto={guardarPresupuesto}\n                    guardarRestante={guardarRestante}\n                    actualizarPregunta={actualizarPregunta}\n                  />\n                )  :  (\n                  <div className=\"row\">\n                      <div className=\"one-half column\">\n                          <Formulario \n                            guardarGasto={guardarGasto}\n                            guardarCrearGasto={guardarCrearGasto}\n                          />\n                      </div>\n\n                      <div className=\"one-half column\">\n                         <Listado\n                            gastos={gastos}\n                         />\n\n                         <ControlPresupuesto \n                            presupuesto={presupuesto}\n                            restante={restante}\n                          />\n                      </div>\n                  </div>\n                ) \n              }\n            </div>\n        </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}